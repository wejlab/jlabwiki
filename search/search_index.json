{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome! The Johnson Lab Wiki This is a collaborative knowledge base for members of the W. Evan Johnson Lab at Rutgers University. This wiki is built using MkDocs. Check out this guide for a detailed introduction on how to navigate and edit the wiki via Github. If you have ideas on how to improve the wiki or about new content you would like to be added, write something on the \"Wiki Ideas\" page.","title":"Home"},{"location":"#welcome","text":"","title":"Welcome!"},{"location":"#the-johnson-lab-wiki","text":"This is a collaborative knowledge base for members of the W. Evan Johnson Lab at Rutgers University. This wiki is built using MkDocs. Check out this guide for a detailed introduction on how to navigate and edit the wiki via Github. If you have ideas on how to improve the wiki or about new content you would like to be added, write something on the \"Wiki Ideas\" page.","title":"The Johnson Lab Wiki"},{"location":"annual_checkin/","text":"Annual Review Questions Questions for discussion during your annual review with Evan: What are your short- to medium-term career goals and directions (5\u201310 year plan)?: What were your goals from last year? Summarize your progress this past year on your goals (including papers published and grants submitted). What obstacles (if any) hindered the accomplishment of your goals? What are your goals for next year? To which of your career goals (above) do these relate? Which projects will you prioritize this year, how your percent effort will be allocated? Where do you expect your funding to come from this coming year? Papers do you plan to submit/publish, including a timetable? Grants you will lead or help write, including a timetable (and a K award)? Are there any concerns or things I can do to better support you?","title":"Annual Review Questions"},{"location":"annual_checkin/#annual-review-questions","text":"Questions for discussion during your annual review with Evan: What are your short- to medium-term career goals and directions (5\u201310 year plan)?: What were your goals from last year? Summarize your progress this past year on your goals (including papers published and grants submitted). What obstacles (if any) hindered the accomplishment of your goals? What are your goals for next year? To which of your career goals (above) do these relate? Which projects will you prioritize this year, how your percent effort will be allocated? Where do you expect your funding to come from this coming year? Papers do you plan to submit/publish, including a timetable? Grants you will lead or help write, including a timetable (and a K award)? Are there any concerns or things I can do to better support you?","title":"Annual Review Questions"},{"location":"grant_outline/","text":"Grant Outline Template You can use the template below to format the Research Strategy section of your grant: Access Template on Google Docs","title":"Grant Outline Template"},{"location":"grant_outline/#grant-outline-template","text":"You can use the template below to format the Research Strategy section of your grant: Access Template on Google Docs","title":"Grant Outline Template"},{"location":"grant_timelines/","text":"Grant Timeline Expectations 1 year in advance Formal discussion w/Evan to create goals for the year, including: Any grants to submit that year (K awards, R01, R21, etc) Projects you work on \u2013 where will your funding come from? Other work, mentorship, tasks to complete 3 months in advance Discussion/lab meeting of the goal of the grant, including what will be in the grant Discuss with Evan roles and responsibilities for the grant Notify Rutgers staff (Karina) of a plan for grant, discuss modifications to this timeline 2 months in advance Specific aims page written and shared with the lab to request feedback Begin weekly coordination meetings w/Evan Budget planned and submitted to Karina including subcontract information Lab Presentation (or presentation to Evan), which includes: The Aims The preliminary data already have or will need to support these aims 6 weeks in advance Outline for entire grant written 1 month in advance Preliminary data complete and written about and figures completed Figures specific to the Aims (how they connect/flow with each other) shared w/Jessica Karina receives abstract, budget and budget justification 2 weeks in advance All grant paperwork completed and submitted (Biosketch, justifications, sharing plans, etc) Completed Draft shared with Evan 1 week in advance Completed Grant shared with all coinvestigators/relevant collaborators 1 day (or morning of submission) Final science, Aims, Research Plan, References submitted to Karina","title":"Grant Timeline Expectations"},{"location":"grant_timelines/#grant-timeline-expectations","text":"","title":"Grant Timeline Expectations"},{"location":"grant_timelines/#1-year-in-advance","text":"Formal discussion w/Evan to create goals for the year, including: Any grants to submit that year (K awards, R01, R21, etc) Projects you work on \u2013 where will your funding come from? Other work, mentorship, tasks to complete","title":"1 year in advance"},{"location":"grant_timelines/#3-months-in-advance","text":"Discussion/lab meeting of the goal of the grant, including what will be in the grant Discuss with Evan roles and responsibilities for the grant Notify Rutgers staff (Karina) of a plan for grant, discuss modifications to this timeline","title":"3 months in advance"},{"location":"grant_timelines/#2-months-in-advance","text":"Specific aims page written and shared with the lab to request feedback Begin weekly coordination meetings w/Evan Budget planned and submitted to Karina including subcontract information Lab Presentation (or presentation to Evan), which includes: The Aims The preliminary data already have or will need to support these aims","title":"2 months in advance"},{"location":"grant_timelines/#6-weeks-in-advance","text":"Outline for entire grant written","title":"6 weeks in advance"},{"location":"grant_timelines/#1-month-in-advance","text":"Preliminary data complete and written about and figures completed Figures specific to the Aims (how they connect/flow with each other) shared w/Jessica Karina receives abstract, budget and budget justification","title":"1 month in advance"},{"location":"grant_timelines/#2-weeks-in-advance","text":"All grant paperwork completed and submitted (Biosketch, justifications, sharing plans, etc) Completed Draft shared with Evan","title":"2 weeks in advance"},{"location":"grant_timelines/#1-week-in-advance","text":"Completed Grant shared with all coinvestigators/relevant collaborators","title":"1 week in advance"},{"location":"grant_timelines/#1-day-or-morning-of-submission","text":"Final science, Aims, Research Plan, References submitted to Karina","title":"1 day (or morning of submission)"},{"location":"lab_meeting/","text":"Lab Meeting Lab meeting is held on Thursdays from 10-11:30 AM Eastern. To join, log onto Evan\u2019s Zoom meeting (See Slack for link). Instructions for presenters Lab meetings are assigned according to a rotation schedule of lab members ordered by topic. All lab members are assigned a topic that best reflects their research. Ice breakers can be anything that gets people having fun or getting to know each other better. They can take up to 15-20 minutes. Be creative! Presenters can speak on any topic they choose, although the rotation schedule is based on their primary research topic. Presenters should shoot for ~15 minutes followed by ~10. minutes for questions and discussion. Note: If you don\u2019t have any research updates, please present a paper in your field that is of interest to you and/or others in the lab! Presenter Code Review Presenters should also prepare for a short code review after presenting on their science topic. The code review should include a 5 min intro to the code, 10 minutes for lab members to review the code indepently, 10 min code walk through, and 10 minutes for feedback/questions. More information can be found on the Lab Meeting Code Review page.","title":"Lab Meeting"},{"location":"lab_meeting/#lab-meeting","text":"Lab meeting is held on Thursdays from 10-11:30 AM Eastern. To join, log onto Evan\u2019s Zoom meeting (See Slack for link).","title":"Lab Meeting"},{"location":"lab_meeting/#instructions-for-presenters","text":"Lab meetings are assigned according to a rotation schedule of lab members ordered by topic. All lab members are assigned a topic that best reflects their research. Ice breakers can be anything that gets people having fun or getting to know each other better. They can take up to 15-20 minutes. Be creative! Presenters can speak on any topic they choose, although the rotation schedule is based on their primary research topic. Presenters should shoot for ~15 minutes followed by ~10. minutes for questions and discussion. Note: If you don\u2019t have any research updates, please present a paper in your field that is of interest to you and/or others in the lab!","title":"Instructions for presenters"},{"location":"lab_meeting/#presenter-code-review","text":"Presenters should also prepare for a short code review after presenting on their science topic. The code review should include a 5 min intro to the code, 10 minutes for lab members to review the code indepently, 10 min code walk through, and 10 minutes for feedback/questions. More information can be found on the Lab Meeting Code Review page.","title":"Presenter Code Review"},{"location":"lab_retreat_2025/","text":"Lab Retreat 2025 See Slack for more finite details as we continue to plan! Here's the deets: WHEN: Saturday, August 2 (8/2) WHERE: Newark area, NJ WHO: The Johnson Lab WHAT: RETREAT! - Hike - Group photo - BYO picnic lunch - Unstructured time / small group activities (e.g. escape room, hanging out, climbing) - Dinner with the lab (restaurant, pay for yourself) WHY: Because we deserve some in-person hangout time with each other after working remotely day-in and day-out! We are eager to hear ideas on hike locations and other ideas, which we can solidify as we get closer. We will also get carpooling logistics figured out. For now, please mark August 2nd in your calendars!","title":"Lab Retreat 2025"},{"location":"lab_retreat_2025/#lab-retreat-2025","text":"See Slack for more finite details as we continue to plan! Here's the deets: WHEN: Saturday, August 2 (8/2) WHERE: Newark area, NJ WHO: The Johnson Lab WHAT: RETREAT! - Hike - Group photo - BYO picnic lunch - Unstructured time / small group activities (e.g. escape room, hanging out, climbing) - Dinner with the lab (restaurant, pay for yourself) WHY: Because we deserve some in-person hangout time with each other after working remotely day-in and day-out! We are eager to hear ideas on hike locations and other ideas, which we can solidify as we get closer. We will also get carpooling logistics figured out. For now, please mark August 2nd in your calendars!","title":"Lab Retreat 2025"},{"location":"personalpages/","text":"Overview: Personal pages Feel free to create a page and edit however you want! Add fun stuff, photos, a list of your current projects, hobbies, go wild.","title":"Overview: Personal pages"},{"location":"personalpages/#overview-personal-pages","text":"Feel free to create a page and edit however you want! Add fun stuff, photos, a list of your current projects, hobbies, go wild.","title":"Overview: Personal pages"},{"location":"protected_time/","text":"Evan's Protected Lab Time New as of Summer 2025! Evan has carved out PROTECTED time on Tuesdays and Thursdays to meet with students and Pod groups. Your weekly meeting with him will be either a Pods meeting (90 minutes) or a one-on-one (30 minutes). All meetings will be canceled during travel weeks, and the rotation will resume the following week. You can access the most up-to-date dates and times here: Evan's Schedule.xlsx Please contact Jessica for access if you are unable to view the document. Be sure to send Evan your Zoom link information and a calendar invite for your meetings. Timeliness If you can get feedback or discuss something via Slack or email, consider doing that to reserve more of your meeting time for other topics. Evan can sometimes be a tad late! Some helpful tips: Reach out to him on Slack (and via cell if urgent) Please be aware of time during your slot! If you started the meeting late, you can send a quick text to the next individual or group to let them know of the delay. Be mindful of going over your time slot. Also remind Evan if need be :) Sometimes when Evan is traveling, he doesn't always relay that a meeting needs to be canceled until day-of. Try sending him a message on Slack ahead of time with your agenda. If he can't meet, it'll probably remind him to tell you he can't.","title":"Evan's Protected Lab Time"},{"location":"protected_time/#evans-protected-lab-time","text":"New as of Summer 2025! Evan has carved out PROTECTED time on Tuesdays and Thursdays to meet with students and Pod groups. Your weekly meeting with him will be either a Pods meeting (90 minutes) or a one-on-one (30 minutes). All meetings will be canceled during travel weeks, and the rotation will resume the following week. You can access the most up-to-date dates and times here: Evan's Schedule.xlsx Please contact Jessica for access if you are unable to view the document. Be sure to send Evan your Zoom link information and a calendar invite for your meetings.","title":"Evan's Protected Lab Time"},{"location":"protected_time/#timeliness","text":"If you can get feedback or discuss something via Slack or email, consider doing that to reserve more of your meeting time for other topics. Evan can sometimes be a tad late! Some helpful tips: Reach out to him on Slack (and via cell if urgent) Please be aware of time during your slot! If you started the meeting late, you can send a quick text to the next individual or group to let them know of the delay. Be mindful of going over your time slot. Also remind Evan if need be :) Sometimes when Evan is traveling, he doesn't always relay that a meeting needs to be canceled until day-of. Try sending him a message on Slack ahead of time with your agenda. If he can't meet, it'll probably remind him to tell you he can't.","title":"Timeliness"},{"location":"quicklinks/","text":"Quick Links Here is a collection of resources that may be useful to lab members. Data Science R for Data Science - Book by Hadley Wickham Bioinformatics A 10-step guide to party conversation for bioinformaticians Bioinformatics Algorithms - Free textbook, with interactive coding challenges R Package Development Integrating git and Rstudio - A great little tutorial on how to instantaneously use the git functionality in RStudio. It's so easy! R Packages (2e) - Book by Hadley Wickham and Jennifer Bryan Bioconductor Home Bioconductor Release Schedule","title":"Quick Links"},{"location":"quicklinks/#quick-links","text":"Here is a collection of resources that may be useful to lab members.","title":"Quick Links"},{"location":"quicklinks/#data-science","text":"R for Data Science - Book by Hadley Wickham","title":"Data Science"},{"location":"quicklinks/#bioinformatics","text":"A 10-step guide to party conversation for bioinformaticians Bioinformatics Algorithms - Free textbook, with interactive coding challenges","title":"Bioinformatics"},{"location":"quicklinks/#r-package-development","text":"Integrating git and Rstudio - A great little tutorial on how to instantaneously use the git functionality in RStudio. It's so easy! R Packages (2e) - Book by Hadley Wickham and Jennifer Bryan Bioconductor Home Bioconductor Release Schedule","title":"R Package Development"},{"location":"slack/","text":"Lab Slack The Johnson Lab relies on Slack for communication about important lab updates, and directly with other lab members and Evan. If you are a collaborator or joining the Johnson Lab and need access, please reach out to Evan via email.","title":"Lab Slack"},{"location":"slack/#lab-slack","text":"The Johnson Lab relies on Slack for communication about important lab updates, and directly with other lab members and Evan. If you are a collaborator or joining the Johnson Lab and need access, please reach out to Evan via email.","title":"Lab Slack"},{"location":"wiki_ideas/","text":"Wiki Ideas The goal is to grow this wiki into a collection of tutorials and information that is highly relevant to our lab. Please add topics that you would like to see on the wiki! Vague ideas are ok Ideas Add jessica's code review doc (in MD format) Aubrey - intro to Bioconductor package development How to write effective R code Links to lab posters List of working J Lab R Packages Recommended tools for various Bioinfo analyses","title":"Wiki Ideas"},{"location":"wiki_ideas/#wiki-ideas","text":"The goal is to grow this wiki into a collection of tutorials and information that is highly relevant to our lab. Please add topics that you would like to see on the wiki! Vague ideas are ok","title":"Wiki Ideas"},{"location":"wiki_ideas/#ideas","text":"Add jessica's code review doc (in MD format) Aubrey - intro to Bioconductor package development How to write effective R code Links to lab posters List of working J Lab R Packages Recommended tools for various Bioinfo analyses","title":"Ideas"},{"location":"code_review/code_review_overview/","text":"Overview What are code reviews? Regular code reviews are essential for maintaining high-quality code. They help identify potential issues early, improve overall code structure, and promote best practices. Code reviews are also valuable learning opportunities\u2014they allow you to: Learn from others' approaches and feedback Improve your coding skills Build confidence in your code Practice communicating about code in both formal and informal contexts Everyone in the lab is encouraged to participate in code reviews! A guide to code reviews This guide outlines how to conduct different types of code reviews in our lab: Informal code reviews \u2013 requested by the coder at any stage Lab meeting code reviews \u2013 collaborative reviews during lab meetings Manuscript submission reviews \u2013 final checks before submitting code with a manuscript You'll also find a resources section with: Recommended style guides Useful R packages for automating parts of the review process Additional materials to support effective code reviews Resources For more details, please see: General Code Review Informal Code Review Lab Meeting Code Review Manuscript Submission Code Review Tips and Resources for Developers","title":"Overview"},{"location":"code_review/code_review_overview/#overview","text":"","title":"Overview"},{"location":"code_review/code_review_overview/#what-are-code-reviews","text":"Regular code reviews are essential for maintaining high-quality code. They help identify potential issues early, improve overall code structure, and promote best practices. Code reviews are also valuable learning opportunities\u2014they allow you to: Learn from others' approaches and feedback Improve your coding skills Build confidence in your code Practice communicating about code in both formal and informal contexts Everyone in the lab is encouraged to participate in code reviews!","title":"What are code reviews?"},{"location":"code_review/code_review_overview/#a-guide-to-code-reviews","text":"This guide outlines how to conduct different types of code reviews in our lab: Informal code reviews \u2013 requested by the coder at any stage Lab meeting code reviews \u2013 collaborative reviews during lab meetings Manuscript submission reviews \u2013 final checks before submitting code with a manuscript You'll also find a resources section with: Recommended style guides Useful R packages for automating parts of the review process Additional materials to support effective code reviews","title":"A guide to code reviews"},{"location":"code_review/code_review_overview/#resources","text":"For more details, please see: General Code Review Informal Code Review Lab Meeting Code Review Manuscript Submission Code Review Tips and Resources for Developers","title":"Resources"},{"location":"code_review/general_code_review/","text":"General Code Review Guidelines For Developers To support an effective code review, developers should provide reviewers with: A brief written description of the code's goal or objective A clear explanation of all inputs A sample input or dataset A code chunk of 150\u2013200 lines (maximum per review session) For Reviewers Reviewers should: Plan to spend ~1 hour per 200 lines of code Evaluate the code by considering: Does the code run successfully and produce the intended output? Is the code well commented and easy to follow? Could repeated code be refactored into functions? Are there more efficient methods or functions that could be used? Is the code readable and well-organized ? Are edge cases or input checks addressed (especially for shared code)? What did you learn that you might apply in your own work? Provide a written summary that includes: Constructive suggestions Positive feedback Aim to provide feedback promptly , so the developer isn't blocked from progressing Feedback Formats Offline Exchange Developer sends: Code file Data file or data access instructions Reviewer responds with: A written review , similar to a manuscript critique Both parties agree on a turnaround time Real-time Meeting (Preferred) Reviewer provides: Real-time comments Written notes summarizing needed changes Ideal workflow: Developer and reviewer schedule a meeting (e.g., Wednesday at 3 PM) Code is shared two business days before (e.g., by EOD Monday) Meeting held for discussion Any unresolved items are followed up in writing Setting Specific Expectations These general guidelines should be adapted depending on the review context. Lab members are expected to participate regularly in the following review types: Informal Code Review Lab Meeting Code Review Manuscript Submission Code Review","title":"General Code Review Guidelines"},{"location":"code_review/general_code_review/#general-code-review-guidelines","text":"","title":"General Code Review Guidelines"},{"location":"code_review/general_code_review/#for-developers","text":"To support an effective code review, developers should provide reviewers with: A brief written description of the code's goal or objective A clear explanation of all inputs A sample input or dataset A code chunk of 150\u2013200 lines (maximum per review session)","title":"For Developers"},{"location":"code_review/general_code_review/#for-reviewers","text":"Reviewers should: Plan to spend ~1 hour per 200 lines of code Evaluate the code by considering: Does the code run successfully and produce the intended output? Is the code well commented and easy to follow? Could repeated code be refactored into functions? Are there more efficient methods or functions that could be used? Is the code readable and well-organized ? Are edge cases or input checks addressed (especially for shared code)? What did you learn that you might apply in your own work? Provide a written summary that includes: Constructive suggestions Positive feedback Aim to provide feedback promptly , so the developer isn't blocked from progressing","title":"For Reviewers"},{"location":"code_review/general_code_review/#feedback-formats","text":"","title":"Feedback Formats"},{"location":"code_review/general_code_review/#offline-exchange","text":"Developer sends: Code file Data file or data access instructions Reviewer responds with: A written review , similar to a manuscript critique Both parties agree on a turnaround time","title":"Offline Exchange"},{"location":"code_review/general_code_review/#real-time-meeting-preferred","text":"Reviewer provides: Real-time comments Written notes summarizing needed changes Ideal workflow: Developer and reviewer schedule a meeting (e.g., Wednesday at 3 PM) Code is shared two business days before (e.g., by EOD Monday) Meeting held for discussion Any unresolved items are followed up in writing","title":"Real-time Meeting (Preferred)"},{"location":"code_review/general_code_review/#setting-specific-expectations","text":"These general guidelines should be adapted depending on the review context. Lab members are expected to participate regularly in the following review types: Informal Code Review Lab Meeting Code Review Manuscript Submission Code Review","title":"Setting Specific Expectations"},{"location":"code_review/informal_code_review/","text":"Informal Code Reviews Informal code reviews are conducted as needed within each assigned pod. When to Initiate a Review As a general guideline, informal code reviews should be considered in the following situations: When a new feature has been added to a package or analysis. When someone has been troubleshooting a bug for an extended period (e.g., more than a few hours or a full day). How to Conduct Reviews Pod meetings are a great opportunity to hold informal code reviews. Reviews can also be scheduled outside of regular pod meetings. Slack may be used to coordinate or conduct quick reviews. Additional Notes Pods working on code-intensive projects (such as package development or complex analyses) are encouraged\u2014and may be required\u2014to include code reviews as a regular part of their weekly workflow.","title":"Informal Code Reviews"},{"location":"code_review/informal_code_review/#informal-code-reviews","text":"Informal code reviews are conducted as needed within each assigned pod.","title":"Informal Code Reviews"},{"location":"code_review/informal_code_review/#when-to-initiate-a-review","text":"As a general guideline, informal code reviews should be considered in the following situations: When a new feature has been added to a package or analysis. When someone has been troubleshooting a bug for an extended period (e.g., more than a few hours or a full day).","title":"When to Initiate a Review"},{"location":"code_review/informal_code_review/#how-to-conduct-reviews","text":"Pod meetings are a great opportunity to hold informal code reviews. Reviews can also be scheduled outside of regular pod meetings. Slack may be used to coordinate or conduct quick reviews.","title":"How to Conduct Reviews"},{"location":"code_review/informal_code_review/#additional-notes","text":"Pods working on code-intensive projects (such as package development or complex analyses) are encouraged\u2014and may be required\u2014to include code reviews as a regular part of their weekly workflow.","title":"Additional Notes"},{"location":"code_review/lab_meeting_code_review/","text":"Lab Meeting Code Review An Abbreviated Code Reviews Abbreviated code reviews conducted during lab meetings are designed to be lightweight and require no advance preparation from reviewers. Format One presenter per lab meeting will share either: Their scientific work, or A helpful topic, along with relevant code. The presenter leads the session, walking through their code and explaining its context. Purpose These sessions are meant to provide focused, constructive feedback. Given the limited time, presenters are encouraged to request specific feedback areas (see Suggested Reviewer Feedback for examples). Guidelines for Presenters Code shared often relates to previously discussed scientific topics, but is not a requirement. Choose code where feedback will be most beneficial to your work. Structure 10-10:30: Intros/Ice Breaker 10:30-10:45: Present Science (or other topic helpful to presenter) 10:45-10:55: Q&A (based on science/chosen topic) 10:55-11:00: Presenter Introduces Code Expected Output/Goal Describe the Inputs Provide code Optional: Provide Example Input 11:00-11:10: Independent Review of Presenter\u2019s Code Will likely have time to evaluate code in 1 or 2 of the ways suggested earlier 11:10-11:20: Presenter Walks through Code Describe the logic behind each line or chunk of lines Describe algorithms, function calls, etc 11:20-11:30: Code Feedback Send specific \u201cto-dos\u201d or changes to the developer via Slack OR as issues on GitHub Provide positive praise (may be done via chat)","title":"Lab Meeting Code Review"},{"location":"code_review/lab_meeting_code_review/#lab-meeting-code-review","text":"","title":"Lab Meeting Code Review"},{"location":"code_review/lab_meeting_code_review/#an-abbreviated-code-reviews","text":"Abbreviated code reviews conducted during lab meetings are designed to be lightweight and require no advance preparation from reviewers.","title":"An Abbreviated Code Reviews"},{"location":"code_review/lab_meeting_code_review/#format","text":"One presenter per lab meeting will share either: Their scientific work, or A helpful topic, along with relevant code. The presenter leads the session, walking through their code and explaining its context.","title":"Format"},{"location":"code_review/lab_meeting_code_review/#purpose","text":"These sessions are meant to provide focused, constructive feedback. Given the limited time, presenters are encouraged to request specific feedback areas (see Suggested Reviewer Feedback for examples).","title":"Purpose"},{"location":"code_review/lab_meeting_code_review/#guidelines-for-presenters","text":"Code shared often relates to previously discussed scientific topics, but is not a requirement. Choose code where feedback will be most beneficial to your work.","title":"Guidelines for Presenters"},{"location":"code_review/lab_meeting_code_review/#structure","text":"10-10:30: Intros/Ice Breaker 10:30-10:45: Present Science (or other topic helpful to presenter) 10:45-10:55: Q&A (based on science/chosen topic) 10:55-11:00: Presenter Introduces Code Expected Output/Goal Describe the Inputs Provide code Optional: Provide Example Input 11:00-11:10: Independent Review of Presenter\u2019s Code Will likely have time to evaluate code in 1 or 2 of the ways suggested earlier 11:10-11:20: Presenter Walks through Code Describe the logic behind each line or chunk of lines Describe algorithms, function calls, etc 11:20-11:30: Code Feedback Send specific \u201cto-dos\u201d or changes to the developer via Slack OR as issues on GitHub Provide positive praise (may be done via chat)","title":"Structure"},{"location":"code_review/manuscript_code_review/","text":"Manuscript Submission Code Review Manuscript submission code reviews are the most in-depth reviews conducted in the lab. Their primary goals are to ensure that all code related to a manuscript is: Publicly accessible Reproducible Well-documented Well-organized This includes code for data access, preprocessing, analysis, and table/figure generation . When to Initiate a Review A manuscript code review should take place before submitting the final draft to a journal or preprint server. At least two pod members must complete the review, which should be discussed in a scheduled pod meeting. Give reviewers at least 1 week to complete their review. Provide each reviewer with: A link to the GitHub repository A draft of the manuscript Manuscript GitHub Repository All analysis-related materials must be included in a single GitHub repository. Data may be hosted externally, but the repository must contain clear instructions or code to retrieve that data . Tip: Well-documented, modular code written throughout the project will reduce the workload during manuscript prep. Recommended Repository Structure R Markdown file Follows the manuscript's logic and structure: Raw data retrieval Data cleaning and preprocessing Data analysis Figure/table creation sessionInfo() block Clear narrative text throughout PDF of the R Markdown A static, reproducible version of the work R/ folder Custom functions split into separate .R files All functions documented using roxygen2 Include usage examples for key user-facing functions README.md Overview of repository structure Instructions for running the analysis (i.e., point to the specific .md file) Direct user to key functions DESCRIPTION file Follows R package standards Must include: name, title, authors, R version, and required packages Reviewer Responsibilities Reviewers should clone the repository and assess the following: Reproducibility Can the R Markdown be run start-to-finish on your machine? Output should match the included PDF. All required data should be accessible (no local paths or hardcoded directories). If errors occur, confirm whether they stem from environment/version differences. Resolve these issues before moving to steps 2 and 3. Code Quality R Markdown is clear and matches the manuscript's structure. Code is well-commented. Functions in the R/ folder have clear roxygen2 documentation. General Feedback Provide suggestions for improvement. Reference the General Guidelines for Reviewers for additional points. Giving Feedback Use GitHub Issues for detailed comments. A brief written summary is also encouraged\u2014include both praise and suggestions. Reviewers should be able to: Reproduce the analysis independently Understand how to use any shared functions If clarification is needed, the author must update the code (e.g., improve README, add inline documentation, or expand function descriptions).","title":"Manuscript Submission Code Review"},{"location":"code_review/manuscript_code_review/#manuscript-submission-code-review","text":"Manuscript submission code reviews are the most in-depth reviews conducted in the lab. Their primary goals are to ensure that all code related to a manuscript is: Publicly accessible Reproducible Well-documented Well-organized This includes code for data access, preprocessing, analysis, and table/figure generation .","title":"Manuscript Submission Code Review"},{"location":"code_review/manuscript_code_review/#when-to-initiate-a-review","text":"A manuscript code review should take place before submitting the final draft to a journal or preprint server. At least two pod members must complete the review, which should be discussed in a scheduled pod meeting. Give reviewers at least 1 week to complete their review. Provide each reviewer with: A link to the GitHub repository A draft of the manuscript","title":"When to Initiate a Review"},{"location":"code_review/manuscript_code_review/#manuscript-github-repository","text":"All analysis-related materials must be included in a single GitHub repository. Data may be hosted externally, but the repository must contain clear instructions or code to retrieve that data . Tip: Well-documented, modular code written throughout the project will reduce the workload during manuscript prep.","title":"Manuscript GitHub Repository"},{"location":"code_review/manuscript_code_review/#recommended-repository-structure","text":"R Markdown file Follows the manuscript's logic and structure: Raw data retrieval Data cleaning and preprocessing Data analysis Figure/table creation sessionInfo() block Clear narrative text throughout PDF of the R Markdown A static, reproducible version of the work R/ folder Custom functions split into separate .R files All functions documented using roxygen2 Include usage examples for key user-facing functions README.md Overview of repository structure Instructions for running the analysis (i.e., point to the specific .md file) Direct user to key functions DESCRIPTION file Follows R package standards Must include: name, title, authors, R version, and required packages","title":"Recommended Repository Structure"},{"location":"code_review/manuscript_code_review/#reviewer-responsibilities","text":"Reviewers should clone the repository and assess the following:","title":"Reviewer Responsibilities"},{"location":"code_review/manuscript_code_review/#reproducibility","text":"Can the R Markdown be run start-to-finish on your machine? Output should match the included PDF. All required data should be accessible (no local paths or hardcoded directories). If errors occur, confirm whether they stem from environment/version differences. Resolve these issues before moving to steps 2 and 3.","title":"Reproducibility"},{"location":"code_review/manuscript_code_review/#code-quality","text":"R Markdown is clear and matches the manuscript's structure. Code is well-commented. Functions in the R/ folder have clear roxygen2 documentation.","title":"Code Quality"},{"location":"code_review/manuscript_code_review/#general-feedback","text":"Provide suggestions for improvement. Reference the General Guidelines for Reviewers for additional points.","title":"General Feedback"},{"location":"code_review/manuscript_code_review/#giving-feedback","text":"Use GitHub Issues for detailed comments. A brief written summary is also encouraged\u2014include both praise and suggestions. Reviewers should be able to: Reproduce the analysis independently Understand how to use any shared functions If clarification is needed, the author must update the code (e.g., improve README, add inline documentation, or expand function descriptions).","title":"Giving Feedback"},{"location":"code_review/tips_code_review/","text":"Tips and Resources for Developers These best practices will help you write clear, reproducible, and well-documented code, making code reviews and collaborations smoother. 1. Request Reviews Early The earlier you ask for feedback, the less likely you'll need to make major revisions later. 2. Follow a Style Guide Adhering to language-specific style guides improves readability and consistency. For R (tidyverse style): - R tidyverse style guide - styler package : Automatically reformats code to match tidyverse standards. 3. Write Clear, Maintainable Code General Guidelines Use descriptive variable names (avoid temp , final , var1 , etc.). Keep lines under 80 characters wide for readability. Functions should be <50 lines long to encourage modular, reusable code. For Packages Use small, focused functions with clear roxygen2 headers. Inline comments should not be needed\u2014function docs should be self-explanatory. For Analyses Use R Markdown files: Include informative narrative text for each code block. Minimize inline comments by using well-documented functions. Store reusable functions in an R/ directory and document with roxygen2 . For Scripts Use R Markdown when possible. Comment generously throughout standalone scripts. 4. Use GitHub Effectively All project code should be hosted on GitHub. Best practices include: For Analyses, Projects, or Papers Organize your repository with: An R Markdown file for the analysis A knit PDF version Custom functions in an R/ folder A README.md with usage instructions A DESCRIPTION file For Packages Follow Hadley Wickham\u2019s package guide Follow Bioconductor standards GitHub Tips Ensure repositories contain everything needed to reproduce your results. Use GitHub Issues for bug tracking, feature requests, and reviewer feedback. Commit and push regularly (after verifying that your code works). Keeping your working version on GitHub helps prevent accidental loss and supports collaborative development. 5. Write Tests Automated testing ensures that your code behaves as expected and is safe for others to use. When to Use Tests Required for code that will be reused or shared (e.g., packages). Optional but recommended for one-off analyses or exploratory code. Testing Best Practices Run standard checks: R CMD check BiocCheck (for Bioconductor submissions) Build in input validation with user-friendly error messages: Use if statements to catch invalid inputs early. Make error messages clear and actionable. Test edge cases and expected behavior : Use testthat for automated tests.","title":"Tips and Resources for Developers"},{"location":"code_review/tips_code_review/#tips-and-resources-for-developers","text":"These best practices will help you write clear, reproducible, and well-documented code, making code reviews and collaborations smoother.","title":"Tips and Resources for Developers"},{"location":"code_review/tips_code_review/#1-request-reviews-early","text":"The earlier you ask for feedback, the less likely you'll need to make major revisions later.","title":"1. Request Reviews Early"},{"location":"code_review/tips_code_review/#2-follow-a-style-guide","text":"Adhering to language-specific style guides improves readability and consistency. For R (tidyverse style): - R tidyverse style guide - styler package : Automatically reformats code to match tidyverse standards.","title":"2. Follow a Style Guide"},{"location":"code_review/tips_code_review/#3-write-clear-maintainable-code","text":"","title":"3. Write Clear, Maintainable Code"},{"location":"code_review/tips_code_review/#general-guidelines","text":"Use descriptive variable names (avoid temp , final , var1 , etc.). Keep lines under 80 characters wide for readability. Functions should be <50 lines long to encourage modular, reusable code.","title":"General Guidelines"},{"location":"code_review/tips_code_review/#for-packages","text":"Use small, focused functions with clear roxygen2 headers. Inline comments should not be needed\u2014function docs should be self-explanatory.","title":"For Packages"},{"location":"code_review/tips_code_review/#for-analyses","text":"Use R Markdown files: Include informative narrative text for each code block. Minimize inline comments by using well-documented functions. Store reusable functions in an R/ directory and document with roxygen2 .","title":"For Analyses"},{"location":"code_review/tips_code_review/#for-scripts","text":"Use R Markdown when possible. Comment generously throughout standalone scripts.","title":"For Scripts"},{"location":"code_review/tips_code_review/#4-use-github-effectively","text":"All project code should be hosted on GitHub. Best practices include:","title":"4. Use GitHub Effectively"},{"location":"code_review/tips_code_review/#for-analyses-projects-or-papers","text":"Organize your repository with: An R Markdown file for the analysis A knit PDF version Custom functions in an R/ folder A README.md with usage instructions A DESCRIPTION file","title":"For Analyses, Projects, or Papers"},{"location":"code_review/tips_code_review/#for-packages_1","text":"Follow Hadley Wickham\u2019s package guide Follow Bioconductor standards","title":"For Packages"},{"location":"code_review/tips_code_review/#github-tips","text":"Ensure repositories contain everything needed to reproduce your results. Use GitHub Issues for bug tracking, feature requests, and reviewer feedback. Commit and push regularly (after verifying that your code works). Keeping your working version on GitHub helps prevent accidental loss and supports collaborative development.","title":"GitHub Tips"},{"location":"code_review/tips_code_review/#5-write-tests","text":"Automated testing ensures that your code behaves as expected and is safe for others to use.","title":"5. Write Tests"},{"location":"code_review/tips_code_review/#when-to-use-tests","text":"Required for code that will be reused or shared (e.g., packages). Optional but recommended for one-off analyses or exploratory code.","title":"When to Use Tests"},{"location":"code_review/tips_code_review/#testing-best-practices","text":"Run standard checks: R CMD check BiocCheck (for Bioconductor submissions) Build in input validation with user-friendly error messages: Use if statements to catch invalid inputs early. Make error messages clear and actionable. Test edge cases and expected behavior : Use testthat for automated tests.","title":"Testing Best Practices"},{"location":"learning_resources/landing/","text":"Under construction... This tab will have wiki entries written by lab members on technical topics.","title":"Landing"},{"location":"personal_pages/aubrey_odom/","text":"Welcome Hello! Welcome to my humble internet abode. I\u2019m currently a postdoc in the Kolachalama lab. I have a MS in statistics and a PhD in bioinformatics. I am interested in the intersection of cardiovascular disease and neurological disorders, which intersects with the focus of my T32 postdoctoral fellowship in cardiovascular epidemiology. I aspire to join academia and am working towards submitting a career development K award this fall. I'm an expert in microbiome analysis and profiling methods. I've also performed gene expression analyses and worked with single-cell RNA-seq data. What I\u2019m up to currently: Working on a variety of projects with Kolachalama lab and the Johnson lab (my PhD lab which now resides at Rutgers University). Writing grants. Mentoring students in the Johnson lab. Contact aodom@bu.edu CV You can access the most recent version of my CV here . Projects + Papers Happy to chat with new students on any of the following projects (last updated 5/5/25): Project title Brief Overview Analysis Category Collaborators Role Progress Support wanted Paclitaxel single-cell RNA-Seq (Using mice aortas) how does Paclitaxel, commonly used in drug-eluting stents, affect the downstream circulatory system? Bioinformatics (single-cell) Yichi Zhang (K lab); Vipul Chitalia (BUSM); Saran Lotzfalladeh (BUSM) Lead analyst Writing manuscript Not at this time Benchmarking metagenomics profilers (MetaScope) Performing benchmarks on an array of metagenomics profilers to identify top performers Bioinformatics (microbiome, methods development) Evan Johnson (Rutgers) Lead analyst Performing analysis Contact me if interested ADRD Foundation Model Creating an LLM-based model to parse neuroimaging data and patient data to propose dementia-related patient diagnoses LLMs K lab Supporting analyst Performing analysis Contact Vijay if interested Zambian infant microbiome analysis Analyzing microbiome data from Zambian infants Bioinformatics (microbiome) Lindsey Locks (BU) Lead analyst Writing manuscript Not at this time Correlating cognitive biomarkers with sleep Using FHS sleep sensor data and neuro data to understand relationship between sleep + cognitive ability Statistics; Machine Learning Matteo Bellitti (K lab) Supporting analyst Performing analysis Contact Matteo if interested Effect of hypertension drugs on gene expression Using data from Black Women\u2019s Health Study, evaluate gene expression changes in breast cancer patients taking hypertension drug (losartan) Bioinformatics (gene expression) Evan Johnson (Rutgers); Dennis Johnson (BUSM) Lead analyst Performing analysis Not at this time Fun stuff Hobbies Photography Jigsaw puzzles Attending indie rock concerts Finding old jazz records at Goodwill Cataloguing and identifying tracklists of background music at the Disneyland resort (near where I grew up)","title":"Aubrey Odom"},{"location":"personal_pages/aubrey_odom/#welcome","text":"Hello! Welcome to my humble internet abode. I\u2019m currently a postdoc in the Kolachalama lab. I have a MS in statistics and a PhD in bioinformatics. I am interested in the intersection of cardiovascular disease and neurological disorders, which intersects with the focus of my T32 postdoctoral fellowship in cardiovascular epidemiology. I aspire to join academia and am working towards submitting a career development K award this fall. I'm an expert in microbiome analysis and profiling methods. I've also performed gene expression analyses and worked with single-cell RNA-seq data. What I\u2019m up to currently: Working on a variety of projects with Kolachalama lab and the Johnson lab (my PhD lab which now resides at Rutgers University). Writing grants. Mentoring students in the Johnson lab.","title":"Welcome"},{"location":"personal_pages/aubrey_odom/#contact","text":"aodom@bu.edu","title":"Contact"},{"location":"personal_pages/aubrey_odom/#cv","text":"You can access the most recent version of my CV here .","title":"CV"},{"location":"personal_pages/aubrey_odom/#projects-papers","text":"Happy to chat with new students on any of the following projects (last updated 5/5/25): Project title Brief Overview Analysis Category Collaborators Role Progress Support wanted Paclitaxel single-cell RNA-Seq (Using mice aortas) how does Paclitaxel, commonly used in drug-eluting stents, affect the downstream circulatory system? Bioinformatics (single-cell) Yichi Zhang (K lab); Vipul Chitalia (BUSM); Saran Lotzfalladeh (BUSM) Lead analyst Writing manuscript Not at this time Benchmarking metagenomics profilers (MetaScope) Performing benchmarks on an array of metagenomics profilers to identify top performers Bioinformatics (microbiome, methods development) Evan Johnson (Rutgers) Lead analyst Performing analysis Contact me if interested ADRD Foundation Model Creating an LLM-based model to parse neuroimaging data and patient data to propose dementia-related patient diagnoses LLMs K lab Supporting analyst Performing analysis Contact Vijay if interested Zambian infant microbiome analysis Analyzing microbiome data from Zambian infants Bioinformatics (microbiome) Lindsey Locks (BU) Lead analyst Writing manuscript Not at this time Correlating cognitive biomarkers with sleep Using FHS sleep sensor data and neuro data to understand relationship between sleep + cognitive ability Statistics; Machine Learning Matteo Bellitti (K lab) Supporting analyst Performing analysis Contact Matteo if interested Effect of hypertension drugs on gene expression Using data from Black Women\u2019s Health Study, evaluate gene expression changes in breast cancer patients taking hypertension drug (losartan) Bioinformatics (gene expression) Evan Johnson (Rutgers); Dennis Johnson (BUSM) Lead analyst Performing analysis Not at this time","title":"Projects + Papers"},{"location":"personal_pages/aubrey_odom/#fun-stuff","text":"Hobbies Photography Jigsaw puzzles Attending indie rock concerts Finding old jazz records at Goodwill Cataloguing and identifying tracklists of background music at the Disneyland resort (near where I grew up)","title":"Fun stuff"}]}